<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="salary">

	<sql id="searchCondition">
		<choose>
			<when test="searchDate == ''"></when>
			<when test="words == ''"> AND salary_date = #{searchDate} </when>
			<otherwise>
				AND ${searchOpt} LIKE CONCAT('%', #{words}, '%') AND salary_date = #{searchDate} 
			</otherwise>
		</choose>
	</sql>

	<insert id="setSalaryAll" parameterType="hashmap">
		INSERT INTO salary SET 
			salary_date 			= 	#{toDate}, 
			emp_id_fk 				= 	${empId}, 
			
			emp_position_fk 		= 	#{empPosition}, 
			salary_pay_fk 			= 	#{salaryPay}, 
			
			emp_step_fk				= 	#{empStep}, 
			emp_headcheck_fk 		= 	#{empHeadcheck}, 
			salary_food 			= 	#{salaryFood},
			salary_overtime_pay 	= 	0,
			salary_nontax_totalcost = 	#{salaryNontaxTotalcost},
			
			net_pay_fk 				=	#{netPay},
			salary_nps_fk 			=	#{salaryNps},
			salary_h_insurance_fk 	=	#{salaryHInsurance},
			salary_care_fk 			=	#{salaryCare},
			salary_e_insurance_fk 	=	#{salaryEInsurance},
			salary_income_fk 		=	#{salaryIncome},
			salary_l_income_fk 		=	#{salaryLIncome},
			salary_totalcost_fk 	=	#{salaryTotalcost} 
	</insert>

	<select id="sqlaryCntChk" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) FROM salary WHERE salary_date = #{toDate}
	</select>
	<select id="getSalaryPayInfo" parameterType="String" resultType="int">
		SELECT salary_pay FROM salary_base WHERE position_code_fk = #{empPosition}
	</select>
	<select id="getSalaryTaxInfo" parameterType="int" resultType="salaryvo">
		SELECT 
			net_pay 			AS netPay, 
			salary_nps 			AS salaryNps, 
			salary_h_insurance 	AS salaryHInsurance, 
			salary_care 		AS salaryCare, 
			salary_e_insurance 	AS salaryEInsurance, 
			salary_income 		AS salaryIncome, 
			salary_l_income 	AS salaryLIncome, 
			salary_totalcost 	AS salaryTotalcost  
		FROM salary_calculation WHERE starting_range = ${salaryPay}
	</select>
	<select id="getMonthSalaryCnt" resultType="int">
		SELECT COUNT(*) FROM salary
	</select>
	<select id="getMonthSalaryList" parameterType="hashmap" resultType="salaryvo">
		SELECT 
			sform_id 			AS sformId, 
			salary_date 		AS salaryDate, 
			emp_num 			AS empNum, 
			emp_name 			AS empName, 
			(SELECT depart_name FROM department WHERE depart_code = emp_department)  		AS empDepartmentName, 
			(SELECT position_name FROM position WHERE position_code = emp_position)  		AS empPositionName, 
			
			emp_step_fk				AS empStep, 
			emp_headcheck_fk 		AS empHeadcheck, 
			salary_overtime_pay 	AS salaryOvertimePay, 
			salary_food 			AS salaryFood,
			salary_nontax_totalcost AS salaryNontaxTotalcost,
			
			salary_pay_fk 			AS salaryPay, 
			
			net_pay_fk 				AS netPay,
			salary_nps_fk 			AS salaryNps,
			salary_h_insurance_fk 	AS salaryHInsurance,
			salary_care_fk 			AS salaryCare,
			salary_e_insurance_fk 	AS salaryEInsurance,
			salary_income_fk 		AS salaryIncome,
			salary_l_income_fk 		AS salaryLIncome,
			salary_totalcost_fk 	AS salaryTotalcost 
			
		FROM salary LEFT JOIN salary_base ON emp_position_fk = position_code_fk 
					LEFT JOIN employee ON emp_id_fk = emp_id 
		WHERE emp_num != 'admin' <include refid="searchCondition"></include> 
		ORDER BY sform_id DESC LIMIT ${startIndex}, ${pageSize}
	</select>
	<select id="getMonthSalaryOne" parameterType="int" resultType="salaryvo">
		SELECT 
			sform_id 				AS sformId, 
			salary_date 			AS salaryDate, 
			emp_num 				AS empNum, 
			emp_name 				AS empName, 
			(SELECT depart_name FROM department WHERE depart_code = emp_department)  		AS empDepartmentName, 
			(SELECT position_name FROM position WHERE position_code = emp_position)  		AS empPositionName, 
			emp_enter 				AS empEnter, 
			
			emp_step_fk				AS empStep, 
			emp_headcheck_fk 		AS empHeadcheck, 
			salary_overtime_pay 	AS salaryOvertimePay, 
			salary_food 			AS salaryFood,
			salary_nontax_totalcost AS salaryNontaxTotalcost,
			
			salary_pay_fk 			AS salaryPay, 
			
			net_pay_fk 				AS netPay,
			salary_nps_fk 			AS salaryNps,
			salary_h_insurance_fk 	AS salaryHInsurance,
			salary_care_fk 			AS salaryCare,
			salary_e_insurance_fk 	AS salaryEInsurance,
			salary_income_fk 		AS salaryIncome,
			salary_l_income_fk 		AS salaryLIncome,
			salary_totalcost_fk 	AS salaryTotalcost 
			
		FROM salary LEFT JOIN salary_base ON emp_position_fk = position_code_fk 
					LEFT JOIN employee ON emp_id_fk = emp_id 
					WHERE sform_id = ${sformId}; 
	</select>
	
	
<!-- 			세금계산테이블 페이징 및 전체갯수 mapper 작성중 -->
	
	
	<select id="getSalarayTaxCnt" resultType="int">
		SELECT COUNT(*) FROM salary_calculation
	</select>
	<select id="getSalarayTaxList" parameterType="hashmap" resultType="salaryvo">
		SELECT 
			salary_id			AS salaryId,
			starting_range 		AS startingRange,
			end_range 			AS endRange,
			net_pay 			AS netPay,
			salary_nps 			AS salaryNps,
			salary_h_insurance 	AS salaryHInsurance,
			salary_care 		AS salaryCare,
			salary_e_insurance 	AS salaryEInsurance,
			salary_income 		AS salaryIncome,
			salary_l_income 	AS salaryLIncome,
			salary_totalcost 	AS salaryTotalcost 
		FROM salary_calculation 
		ORDER BY salary_id ASC LIMIT ${startIndex}, ${pageSize}
	</select>
	
	<update id="setSalaryTaxList" parameterType="salaryvo">
		UPDATE salary_calculation SET 
			net_pay				=	#{netPay},
			salary_nps 			=	#{salaryNps},
			salary_h_insurance 	=	#{salaryHInsurance},
			salary_care 		=	#{salaryCare},
			salary_e_insurance 	=	#{salaryEInsurance},
			salary_income 		=	#{salaryIncome},
			salary_l_income 	=	#{salaryLIncome},
			salary_totalcost 	=	#{salaryTotalcost} 
		WHERE salary_id = #{salaryId} 
	</update>
	<update id="changeOvertimePay" parameterType="hashmap">
		UPDATE salary SET 
			salary_overtime_pay = salary_overtime_pay + ${salaryOvertimePay}, 
			salary_nontax_totalcost = salary_nontax_totalcost  + ${salaryOvertimePay} 
		WHERE emp_id_fk = #{empId} AND salary_date = #{salaryDate}
	</update>

	<delete id="deleteSalaryTaxList" parameterType="salaryvo">
		DELETE FROM salary_calculation 
		WHERE salary_id = #{salaryId} 
	</delete>

</mapper>