<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<sql id="searchCondition">
		<choose>
			<when test="words == ''"></when>
			<when test="searchOpt=='all'">
				WHERE 	(p_name LIKE CONCAT('%', #{words}, '%')) OR 
						(p_code LIKE CONCAT('%', #{words}, '%')) OR 
						(p_brand LIKE CONCAT('%', #{words}, '%')) 
			</when>
			<otherwise>
				WHERE ${searchOpt} LIKE CONCAT('%', #{words}, '%') 
			</otherwise>
		</choose>
	</sql>
	<sql id="typeCondition">
		<choose>
			<when test="words == ''"> WHERE </when>
			<when test="searchOpt=='all'">
				WHERE 	(p_name LIKE CONCAT('%', #{words}, '%')) OR 
						(p_code LIKE CONCAT('%', #{words}, '%')) OR 
						(p_brand LIKE CONCAT('%', #{words}, '%')) AND 
			</when>
			<otherwise>
				WHERE ${searchOpt} LIKE CONCAT('%', #{words}, '%') AND 
			</otherwise>
		</choose>
	</sql>

	<insert id="setProductOne" parameterType="productvo">
		<selectKey keyProperty="ref" order="BEFORE" resultType="int">
			SELECT IFNULL( max(p_id) + 1, 1 ) FROM product
		</selectKey>
			INSERT INTO product SET 
				  p_type 			= #{pType},
				  p_name 			= #{pName},
				  p_code 			= CONCAT(#{pCode}, #{ref}),
				  p_brand 			= #{pBrand},
				  p_group 			= #{pGroup},
				  p_modelnum 		= #{pModelnum},
				  p_unit 			= #{pUnit},
				  p_size 			= #{pSize},
				  p_currency 		= #{pCurrency},
				  p_buy 			= #{pBuy},
				  p_sell 			= #{pSell},
				  p_tax 			= #{pTax},
				  p_taxuse 			= #{pTaxuse},
				  p_note 			= #{pNote},
				  account_id_fk 	= #{accountIdFk}
	</insert>
	<insert id="setBOMInsert" parameterType="productvo">
		INSERT INTO process_mtr SET 
			pm_amount 	= #{pmAmount}, 
			p_id_fk 	= #{pIdFk}, 
			pm_id_fk 	= #{pmIdFk} 
	</insert>
	
	<update id="updateProductOne" parameterType="productvo">
		UPDATE product SET 
			p_type 			= #{pType},
			p_name 			= #{pName},
			p_brand 		= #{pBrand},
			p_group 		= #{pGroup},
			p_modelnum 		= #{pModelnum},
			p_unit 			= #{pUnit},
			p_size 			= #{pSize},
			p_currency 		= #{pCurrency},
			p_buy 			= #{pBuy},
			p_sell 			= #{pSell},
			p_tax 			= #{pTax},
			p_taxuse 		= #{pTaxuse},
			p_note 			= #{pNote},
			account_id_fk 	= #{accountIdFk} 
		WHERE p_id = #{pId} 
	</update>
	
	<select id="getProductList" parameterType="hashmap" resultType="productvo">
		SELECT 
			p_id AS pId, 
			p_type AS pType,
			p_name AS pName,
			p_code AS pCode,
			p_brand AS pBrand,
			p_group AS pGroup,
			p_modelnum AS pModelnum,
			p_unit AS pUnit,
			p_size AS pSize,
			p_currency AS pCurrency,
			p_buy AS pBuy,
			p_sell AS pSell,
			p_tax AS pTax,
			p_taxuse AS pTaxuse,
			p_note AS pNote, 
			client_company AS clientCompany 
		FROM product LEFT JOIN client ON account_id_fk = client_id 
		<include refid="searchCondition"></include> 
		ORDER BY p_id DESC LIMIT 0, 10
	</select>
	<select id="getProductCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) FROM product <include refid="searchCondition"></include>
	</select>
	<select id="getProductOne" parameterType="int" resultType="productvo">
		SELECT 
			p_id AS pId, 
			p_type AS pType,
			p_name AS pName,
			p_code AS pCode,
			p_brand AS pBrand,
			p_group AS pGroup,
			p_modelnum AS pModelnum,
			p_unit AS pUnit,
			p_size AS pSize,
			p_currency AS pCurrency,
			p_buy AS pBuy,
			p_sell AS pSell,
			p_tax AS pTax,
			p_taxuse AS pTaxuse,
			p_note AS pNote, 
			account_id_fk AS accountIdFk, 
			client_company AS clientCompany 
		FROM product LEFT JOIN client ON account_id_fk = client_id 
						WHERE p_id = #{pId} 
	</select>
	<select id="getTypeProductList" parameterType="hashmap" resultType="productvo">
		SELECT 
			p_id AS pId, 
			p_type AS pType,
			p_name AS pName,
			p_code AS pCode,
			p_brand AS pBrand,
			p_group AS pGroup,
			p_modelnum AS pModelnum,
			p_unit AS pUnit,
			p_size AS pSize,
			p_currency AS pCurrency,
			p_buy AS pBuy,
			p_sell AS pSell,
			p_tax AS pTax,
			p_taxuse AS pTaxuse,
			p_note AS pNote, 
			client_company AS clientCompany 
		FROM product LEFT JOIN client ON account_id_fk = client_id 
		<include refid="typeCondition"></include> 
		p_type = #{pType} 
		ORDER BY p_id DESC LIMIT 0, 10
	</select>
	<select id="getBOMList" parameterType="int" resultType="productvo">
		SELECT 
			p_id 			AS pId,
			p_name 			AS pName, 
			p_code 			AS pCode, 
			p_unit 			AS pUnit,
			p_size 			AS pSize, 
			p_buy 			AS pBuy, 
			p_sell 			AS pSell, 
			pm_amount 		AS pmAmount 
		FROM process_mtr LEFT JOIN product ON p_id_fk = ${pIdFk} 
		WHERE p_id = pm_id_fk
	</select>
	
	<delete id="deleteProductOne" parameterType="int">
		DELETE FROM product WHERE p_id = #{pId}
	</delete>
	<delete id="delBOMOne" parameterType="hashmap">
		DELETE FROM process_mtr WHERE p_id_fk = #{pIdFk} AND pm_id_fk = #{pmIdFk}
	</delete>

</mapper>